def Mainprogram():
  # Global parameters:
  global speed_ms    = 0.250
  global speed_rads  = 0.750
  global accel_mss   = 1.600
  global accel_radss = 1.200
  global blend_radius_m = 0.001
  global ref_frame = p[0,0,0,0,0,0]
  # Main program:
  # Program generated by RoboDK v5.5.3 for UR5 on 05/07/2024 11:49:21
  # Using nominal kinematics.
  ref_frame = p[0.000000, 0.000000, -0.015000, 0.000000, 0.000000, 2.382374]
  set_tcp(p[0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000])
 
  speed_rads  = 2.5
  accel_radss = 4
  blend_radius_m = 0.012
 
  set_digital_out(8, False)
  set_digital_out(9, False)

  # Top cover pickup 
  movej([-1.719420, -1.576867, 2.179899, -1.002798, -4.987156, 3.255720],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.714519, -1.543018, 2.231177, -1.088433, -4.991275, 3.257535],accel_radss,speed_rads,0,blend_radius_m) # end trace
  set_digital_out(8, True)
  movej([-1.545479, -1.547409, 2.211088, -1.063597, -4.987575, 2.557797],accel_radss,speed_rads,0,blend_radius_m)
  
  # Fuse pickup
  movej([-1.339017, -1.530828, 2.216917, -1.085944, -4.987104, 1.964194], accel_radss, speed_rads, 0, blend_radius_m)
  movej([-1.304110, -1.530828, 2.216917, -1.085944, -4.987104, 1.824567],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.268568, -1.525482, 2.217528, -1.091761, -4.986650, 1.684719],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.236042, -1.530654, 2.217092, -1.086118, -4.987104, 1.522625],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.166229, -1.530654, 2.217092, -1.086118, -4.987104, 1.241627],accel_radss,speed_rads,0,blend_radius_m)
  
  # PCB pickup
  movej([-0.906175, -1.504823, 2.234196, -1.129053, -4.987104, 0.410851],accel_radss,speed_rads,0,0.025)
  movej([-0.818832, -1.504903, 2.234179, -1.129053, -4.987156, 0.114142],accel_radss,speed_rads,0,0.010) # end trace
  set_digital_out(9, True)
  movej([-0.644376, -1.522276, 2.222851, -1.100081, -4.987104, -0.585383],accel_radss,speed_rads,0,0.020)

  # Bottom cover pickup
  movej([-0.372401, -1.545543, 2.226220, -1.080877, -4.990717, -1.455090],accel_radss,speed_rads,0,blend_radius_m) # end trace
  set_digital_out(8, False)
  movej([-0.368533, -1.600261, 2.157000, -0.956508, -4.987156, -1.456659],accel_radss,speed_rads,0,blend_radius_m)
 
  # Bottom cover assembly
  movej([-1.180136, -1.816242, 2.297796, -0.481554, -5.133310, -1.570796],accel_radss,speed_rads,0,blend_radius_m)
  set_digital_out(9, False)
  movej([-1.180136, -1.641322, 2.437789, -0.796472, -5.133310, -1.570796],accel_radss,speed_rads,0,0) # end trace
  set_digital_out(9, True)
  movej([-1.180136, -1.699671, 2.403807, -0.704134, -5.133310, -1.570796],accel_radss,speed_rads,0,blend_radius_m)
 
  # PCB assembly
  movej([-1.182492, -1.724722, 2.392585, -0.667866, -5.135666, 0.008727],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.182492, -1.656829, 2.435171, -0.778344, -5.135666, 0.008727],accel_radss,speed_rads,0,0) # end trace
  set_digital_out(8, True)
  sleep(0.3)
  movej([-1.182492, -1.724722, 2.392585, -0.667866, -5.13566, 0.008727],accel_radss,speed_rads,0,blend_radius_m)
 
  # Fuse assembly
  movej([-1.230471, -1.827761, 2.459012, -0.631252, -5.183645, 1.570796],accel_radss,speed_rads,0,0)
  movej([-1.230473, -1.742645, 2.513728, -0.771085, -5.183645, 1.570800],accel_radss,speed_rads,0,0.007)
  movej([-1.327977, -1.744362, 2.509033, -0.764852, -5.281139, 1.745347], accel_radss, speed_rads, 0, 0.007)
  movej([-1.544601, -1.665892, 2.498247, -0.832163, -5.497770, 2.268911], accel_radss, speed_rads, 0, 0.010)
 
  # Top cover assembly
  movej([-1.174741, -1.728508, 2.378797, -0.650280, -5.127917, 3.141593],accel_radss,speed_rads,0,blend_radius_m)
  movej([-1.176394, -1.655904, 2.430074, -0.774172, -5.129558, 3.141593],accel_radss,speed_rads,0,0)
  set_digital_out(9, False)
  sleep(0.2)
  set_digital_out(8, False)
  movej([-1.176394, -1.621966, 2.447318, -0.825361, -5.129558, 3.141593],accel_radss,speed_rads,0,0)
  set_digital_out(8, True)
  sleep(0.3)
  movej([-1.176394, -1.731482, 2.381118, -0.649639, -5.129558, 3.141593],accel_radss,speed_rads,0,blend_radius_m)
  
  # Phone stacking
  set_digital_out(8, False)
  movej([-1.820675, -1.720333, 2.342110, -0.621768, -5.117078, 3.141593],accel_radss,speed_rads,0,blend_radius_m)
  set_digital_out(8, True)
  movej([-1.815142, -1.689304, 2.194228, -0.504749, -5.069658, 3.141593],accel_radss,speed_rads,0,blend_radius_m)


  #Update variables
  phone_count = phone_count + 1
  fuses_left = fuses_left - 2
 
  pcb_left = pcb_left - 1
  # End of main program
end


if (run_program):
  state = "RUNNING"
  state_int = 1
  stop_timer=False
  run_timer = True
  run_program = False 
  Mainprogram()
  stop_timer = True
  run_timer = False
else:
  state = "IDLE"
  # state_int = 0
end
